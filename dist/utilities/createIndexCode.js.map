{"version":3,"sources":["../../src/utilities/createIndexCode.js"],"names":["safeVariableName","fileName","indexOfDot","indexOf","slice","buildExportBlock","files","dirImports","dirExports","fileExports","lineEnding","forEach","safeName","push","length","block","concat","join","filePaths","options","code","configCode","banner","banners","_","isArray","config","size","JSON","stringify","sortedFilePaths","sort"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,gBAAgB,GAAIC,QAAD,IAAc;AACrC,QAAMC,UAAU,GAAGD,QAAQ,CAACE,OAAT,CAAiB,GAAjB,CAAnB;;AAEA,MAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrB,WAAOD,QAAP;AACD,GAFD,MAEO;AACL,WAAOA,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBF,UAAlB,CAAP;AACD;AACF,CARD;;AAUA,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,WAAW,GAAG,EAApB;AAEA,QAAMC,UAAU,GAAG,EAAnB;AAEAJ,EAAAA,KAAK,CAACK,OAAN,CAAeV,QAAD,IAAc;AAC1B,UAAMW,QAAQ,GAAGZ,gBAAgB,CAACC,QAAD,CAAjC;;AACA,QAAIW,QAAQ,KAAKX,QAAjB,EAA2B;AACzBM,MAAAA,UAAU,CAACM,IAAX,CAAiB,eAAcD,QAAS,YAAWA,QAAS,IAAGF,UAAW,EAA1E;AACAF,MAAAA,UAAU,CAACK,IAAX,CAAiB,YAAWD,QAAS,KAAIF,UAAW,EAApD;AACD,KAHD,MAGO;AACLD,MAAAA,WAAW,CAACI,IAAZ,CAAkB,uBAAsBD,QAAS,cAAaA,QAAS,IAAGF,UAAW,EAArF;AACD;AACF,GARD;;AAUA,MAAIH,UAAU,CAACO,MAAX,GAAoB,CAAxB,EAA2B;AACzBP,IAAAA,UAAU,CAACM,IAAX,CAAgB,EAAhB;AACD;;AACD,QAAME,KAAK,GAAGR,UAAU,CAACS,MAAX,CAAkBR,UAAlB,EAA8BQ,MAA9B,CAAqCP,WAArC,EAAkDQ,IAAlD,CAAuD,IAAvD,CAAd;AAEA,SAAOF,KAAP;AACD,CAvBD;;eAyBe,kBAACG,SAAD,EAA6B;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAC1C,MAAIC,IAAJ;AACA,MAAIC,UAAJ;AAEAD,EAAAA,IAAI,GAAG,EAAP;AACAC,EAAAA,UAAU,GAAG,EAAb;;AAEA,MAAIF,OAAO,CAACG,MAAZ,EAAoB;AAClB,UAAMC,OAAO,GAAGC,gBAAEC,OAAF,CAAUN,OAAO,CAACG,MAAlB,IAA4BH,OAAO,CAACG,MAApC,GAA6C,CAACH,OAAO,CAACG,MAAT,CAA7D;AAEAC,IAAAA,OAAO,CAACZ,OAAR,CAAiBW,MAAD,IAAY;AAC1BF,MAAAA,IAAI,IAAIE,MAAM,GAAG,IAAjB;AACD,KAFD;AAIAF,IAAAA,IAAI,IAAI,IAAR;AACD;;AAED,MAAID,OAAO,CAACO,MAAR,IAAkBF,gBAAEG,IAAF,CAAOR,OAAO,CAACO,MAAf,IAAyB,CAA/C,EAAkD;AAChDL,IAAAA,UAAU,IAAI,MAAMO,IAAI,CAACC,SAAL,CAAeV,OAAO,CAACO,MAAvB,CAApB;AACD;;AAEDN,EAAAA,IAAI,IAAI,qBAAqBC,UAArB,GAAkC,MAA1C;;AAEA,MAAIH,SAAS,CAACJ,MAAd,EAAsB;AACpB,UAAMgB,eAAe,GAAGZ,SAAS,CAACa,IAAV,EAAxB;AAEAX,IAAAA,IAAI,IAAIf,gBAAgB,CAACyB,eAAD,CAAhB,GAAoC,MAA5C;AACD;;AAED,SAAOV,IAAP;AACD,C","sourcesContent":["import _ from 'lodash';\n\nconst safeVariableName = (fileName) => {\n  const indexOfDot = fileName.indexOf('.');\n\n  if (indexOfDot === -1) {\n    return fileName;\n  } else {\n    return fileName.slice(0, indexOfDot);\n  }\n};\n\nconst buildExportBlock = (files) => {\n  const dirImports = [];\n  const dirExports = [];\n  const fileExports = [];\n\n  const lineEnding = '';\n\n  files.forEach((fileName) => {\n    const safeName = safeVariableName(fileName);\n    if (safeName === fileName) {\n      dirImports.push(`import * as ${safeName} from './${safeName}'${lineEnding}`);\n      dirExports.push(`export { ${safeName} }${lineEnding}`);\n    } else {\n      fileExports.push(`export { default as ${safeName} } from './${safeName}'${lineEnding}`);\n    }\n  });\n\n  if (dirImports.length > 0) {\n    dirImports.push('');\n  }\n  const block = dirImports.concat(dirExports).concat(fileExports).join('\\n');\n\n  return block;\n};\n\nexport default (filePaths, options = {}) => {\n  let code;\n  let configCode;\n\n  code = '';\n  configCode = '';\n\n  if (options.banner) {\n    const banners = _.isArray(options.banner) ? options.banner : [options.banner];\n\n    banners.forEach((banner) => {\n      code += banner + '\\n';\n    });\n\n    code += '\\n';\n  }\n\n  if (options.config && _.size(options.config) > 0) {\n    configCode += ' ' + JSON.stringify(options.config);\n  }\n\n  code += '// @create-index' + configCode + '\\n\\n';\n\n  if (filePaths.length) {\n    const sortedFilePaths = filePaths.sort();\n\n    code += buildExportBlock(sortedFilePaths) + '\\n\\n';\n  }\n\n  return code;\n};\n"],"file":"createIndexCode.js"}